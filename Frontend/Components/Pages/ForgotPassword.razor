@page "/forgot-password"
@inject IHttpClientFactory HttpClientFactory
@inject ILogger<ForgotPassword> Logger

<h3 style="color: white;">Forgot Password</h3>

@if (!string.IsNullOrEmpty(Message))
{
    <p style="color: white;">@Message</p>
}

<EditForm Model="forgotPasswordModel" OnValidSubmit="HandleForgotPassword">
    <InputText @bind-Value="forgotPasswordModel.Email" placeholder="Enter your email" class="form-control" />
    <ValidationMessage For="@(() => forgotPasswordModel.Email)" />
    <button type="submit" class="btn btn-primary mt-2">Send Reset Email</button>
</EditForm>

@code {
    private ForgotPasswordModel forgotPasswordModel = new();
    private string? Message;

    private async Task HandleForgotPassword()
    {
        var client = HttpClientFactory.CreateClient("BackendApi");
        var url = "api/forgotPassword";
        var fullURL = client.BaseAddress + url;
        try
        {
            var response = await client.PostAsJsonAsync(fullURL, forgotPasswordModel);

            if (response.IsSuccessStatusCode)
            {
                Message = "If an account with that email exists, we sent password reset instructions!";
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Console.Write(error);
                Message = "Something went wrong: " + error;
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error sending forgot password request");
            Message = "Unexpected error occurred.";
        }
    }

    public class ForgotPasswordModel
    {
        public string Email { get; set; } = string.Empty;
    }
}
